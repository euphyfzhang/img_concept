name: Transaction
tables:
  - name: daily_transaction
    description: Daily transaction that contains the date of purchase, store name, item, price of the purchased item. 
    base_table:
      database: RESUME_AI_DB
      schema: IMG_RECG
      table: TRANSACTION
    primary_key:
      columns:
        - TRANSACTION_TIMESTAMP
        - pMERCHANT_NAME
        - ITEM
    time_dimensions:
      - name: TRANSACTION_TIMESTAMP
        expr: Timestamp
        description: transaction timestamp, date of purchase, date time of purchase, time of purchase
        unique: true
        data_type: Timestamp_ntz
    measures:
      - name: daily_purchase
        expr: purchase
        description: total purchase of the day
        synonyms: ["total amount of the day", "purchase of the day", "expense of the day", "cost of the day", "spend of the day"]
        default_aggregation: sum
        data_type: number
      - name: average_purchase
        synonyms:
          - average
        description: average spending across the given period
        expr: sum(amount)/period
        data_type: number
        default_aggregation: avg
    dimensions:
      - name: product_id
        expr: product_id
        data_type: number
      - name: region_id
        expr: region_id
        data_type: number

  - name: product
    description: Product dimension table with unique product identifiers and attributes.
    base_table:
      database: cortex_analyst_demo
      schema: revenue_timeseries
      table: product_dim
    primary_key:
      columns:
        - product_id
    dimensions:
      - name: product_id
        expr: product_id
        data_type: number
      - name: product_line
        expr: product_line
        description: Product line associated with revenue
        data_type: varchar
        sample_values:
          - Electronics
          - Clothing
          - Home Appliances
          - Toys
          - Books

  - name: region
    description: Region dimension table with unique region identifiers and geographic attributes.
    base_table:
      database: cortex_analyst_demo
      schema: revenue_timeseries
      table: region_dim
    primary_key:
      columns:
        - region_id
    dimensions:
      - name: region_id
        expr: region_id
        data_type: number
      - name: sales_region
        expr: sales_region
        description: Region associated with revenue
        data_type: varchar
        sample_values:
          - North America
          - Europe
          - Asia
          - South America
          - Africa

  - name: product_dimension
    base_table:
      database: cortex_analyst_demo
      schema: revenue_timeseries
      table: product_dim

    dimensions:
      - name: product_line
        expr: product_line
        cortex_search_service_name: product_line_search_service
        data_type: varchar


relationships:
  - name: revenue_to_product
    left_table: daily_revenue
    right_table: product
    relationship_columns:
      - left_column: product_id
        right_column: product_id
    join_type: left_outer
    relationship_type: many_to_one

  - name: revenue_to_region
    left_table: daily_revenue
    right_table: region
    relationship_columns:
      - left_column: region_id
        right_column: region_id
    join_type: left_outer
    relationship_type: many_to_one

  

verified_queries:
 # For eval sample nlimtiaco_sc_3__0
  - name: "daily cumulative expenses in 2023 dec"
    question: "daily cumulative expenses in 2023 dec"
    verified_at: 1714752498
    verified_by: renee
    sql: "
            SELECT
              date,
              SUM(daily_cogs) OVER (
                ORDER BY
                  date ROWS BETWEEN UNBOUNDED PRECEDING
                  AND CURRENT ROW
              ) AS cumulative_cogs
            FROM
              daily_revenue
            WHERE
              date BETWEEN '2023-12-01'
              AND '2023-12-31'
            ORDER BY
              date DESC;
          "
 # For eval sample nlimtiaco_sc_6__0
  - name: "lowest revenue each month"
    question: "For each month, what was the lowest daily revenue and on what date did that lowest revenue occur?"
    sql: "WITH monthly_min_revenue AS (
        SELECT
          DATE_TRUNC('MONTH', date) AS month,
          MIN(daily_revenue) AS min_revenue
        FROM daily_revenue
          GROUP BY
            DATE_TRUNC('MONTH', date)
        )
        SELECT
          mmr.month,
          mmr.min_revenue,
          dr.date AS min_revenue_date
        FROM monthly_min_revenue AS mmr JOIN daily_revenue AS dr
          ON mmr.month = DATE_TRUNC('MONTH', dr.date) AND mmr.min_revenue = dr.daily_revenue
        ORDER BY mmr.month DESC NULLS LAST"
    verified_at: 1715187400
    verified_by: renee
